name: CI/CD

on: 
  push:
    branches:
      - 'master'
  pull_request:

env:
  SONAR_SCANNER_VERSION: 4.4.0.2170
  SONAR_SERVER_URL: "https://sonarcloud.io"
  BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed

jobs:
  build:
    name: Build Project
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -qq update
          sudo apt-get install -qq --no-install-recommends libstdc++-7-dev build-essential libboost-all-dev
      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl --create-dirs -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: Build project
        run: |
          make clean
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make all
      - uses: actions/upload-artifact@master
        with:
          name: sonar build
          path: ${{ env.BUILD_WRAPPER_OUT_DIR }}/

  sonar:
    name: Run Sonar-Scanner
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@master
        with:
          name: sonar build
          path: ${{ env.BUILD_WRAPPER_OUT_DIR }}
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

  Build-and-Push-Docker-Image:
    runs-on: ubuntu-latest
    name: Docker Build, Tag, Push
    # if: ${{ github.ref == 'refs/heads/master' }} # only deploy when run on master
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build container image
      uses: docker/build-push-action@v2.9.0
      with:
        context: .
        file: ./Docker/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          kikawet/pifromcoprimes:latest
          ghcr.io/kikawet/pifromcoprimes:latest
